[
  {
    "timestamp": "2016-10-14 22:00:00.174473", 
    "testcases": [
      {
        "description": "\nThis asks the MMU for one physical_address:\n    Checks that the number of page_faults is correct.\n    Checks that the number of page_table_traversals is correct.\n", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "name": "test_get_1_address", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "\nThis asks the MMU for one physical_address twice:\n    Checks that the number of page_faults is correct.\n    Checks that the number of page_table_traversalss is correct.\n    Checks that the physical address is persistent.\n", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "name": "test_get_address_twice", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "\nThis asks the MMU for 2 physical_address interleaved among each other:\n    Checks that the number of page_faults is correct.\n    Checks that the number of page_table_traversalss is correct.\n    Checks that the physical address is persistent.\n", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "name": "test_interleave", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "\nThis test spams get_1_address() a bunch.\n    This is to test if they are taking advantage of the tlb.\n", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "name": "test_spam1", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "\nThis tests two processes asking for the same virtual address.\n    Note: the physical addresses should be different.\n", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "name": "test_multiprocess", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "\nThis tests if you are effectively using the TLB for the fact that \"all virtual addresses with the same 3 virtual page numbers will map to the same frame in memory\".\nNote that if this test takes too long ... it means you aren't using the tlb enough.\n", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "name": "test_same_vpns_diff_offset", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "\nThis asks the MMU for one physical_address:\n    Checks that the number of page_faults is correct.\n    Checks that the number of page_table_traversals is correct.\n", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "name": "test_check_removed_unused_bits", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "51224", 
    "checksum": "98ae33d946c043682af7dda83646731a19b7fda6  mmu.c"
  }, 
  {
    "timestamp": "2016-10-15 01:21:00.675601", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "test_get_1_address", 
        "description": "\nThis asks the MMU for one physical_address:\n    Checks that the number of page_faults is correct.\n    Checks that the number of page_table_traversals is correct.\n"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "test_get_address_twice", 
        "description": "\nThis asks the MMU for one physical_address twice:\n    Checks that the number of page_faults is correct.\n    Checks that the number of page_table_traversalss is correct.\n    Checks that the physical address is persistent.\n"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "test_interleave", 
        "description": "\nThis asks the MMU for 2 physical_address interleaved among each other:\n    Checks that the number of page_faults is correct.\n    Checks that the number of page_table_traversalss is correct.\n    Checks that the physical address is persistent.\n"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "test_spam1", 
        "description": "\nThis test spams get_1_address() a bunch.\n    This is to test if they are taking advantage of the tlb.\n"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "test_multiprocess", 
        "description": "\nThis tests two processes asking for the same virtual address.\n    Note: the physical addresses should be different.\n"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "test_same_vpns_diff_offset", 
        "description": "\nThis tests if you are effectively using the TLB for the fact that \"all virtual addresses with the same 3 virtual page numbers will map to the same frame in memory\".\nNote that if this test takes too long ... it means you aren't using the tlb enough.\n"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nmmu_test: mmu_test.c:20: get_assert_write_address: Assertion `physical_address' failed.\n\n... or you timed out ...", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "test_check_removed_unused_bits", 
        "description": "\nThis asks the MMU for one physical_address:\n    Checks that the number of page_faults is correct.\n    Checks that the number of page_table_traversals is correct.\n"
      }
    ], 
    "checksum": "98ae33d946c043682af7dda83646731a19b7fda6  mmu.c", 
    "revision": "51311"
  }
]