[
  {
    "timestamp": "2016-09-16 00:00:00.651725", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has no memory leaks.", 
        "name": "no_leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has memory leaks.", 
        "name": "leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nDidn't find leaked memory when there was some.\ntotal_usage is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has bad frees.", 
        "name": "bad_free", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues.", 
        "name": "full", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "name": "memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==25918== Memcheck, a memory error detector\n==25918== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==25918== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==25918== Command: ././full_test\n==25918== \n==25918== Invalid write of size 8\n==25918==    at 0x400A2E: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208a80 is 22,848 bytes inside an unallocated block of size 4,193,952 in arena \"client\"\n==25918== \n==25918== Invalid write of size 8\n==25918==    at 0x400A38: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208a90 is 22,864 bytes inside an unallocated block of size 4,193,952 in arena \"client\"\n==25918== \n==25918== Invalid write of size 8\n==25918==    at 0x400A46: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208aa0 is 22,880 bytes inside an unallocated block of size 4,193,952 in arena \"client\"\n==25918== \n==25918== Invalid write of size 4\n==25918==    at 0x400A70: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208b80 is 22,864 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid free() / delete / delete[] / realloc()\n==25918==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==25918==    by 0x400A81: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208a80 is 22,608 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid write of size 4\n==25918==    at 0x400A89: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208b84 is 22,868 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid free() / delete / delete[] / realloc()\n==25918==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==25918==    by 0x400A9B: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208a80 is 22,608 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid write of size 4\n==25918==    at 0x400AA3: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208b88 is 22,872 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid free() / delete / delete[] / realloc()\n==25918==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==25918==    by 0x400AB5: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208a80 is 22,608 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid write of size 4\n==25918==    at 0x400ABD: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208b8c is 22,876 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid free() / delete / delete[] / realloc()\n==25918==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==25918==    by 0x400ACF: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208a80 is 22,608 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid write of size 4\n==25918==    at 0x400AD7: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208b90 is 22,880 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid free() / delete / delete[] / realloc()\n==25918==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==25918==    by 0x400AE9: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208a80 is 22,608 bytes inside an unallocated block of size 4,193,712 in arena \"client\"\n==25918== \n==25918== Invalid write of size 4\n==25918==    at 0x400B10: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208c70 is 22,880 bytes inside an unallocated block of size 4,193,488 in arena \"client\"\n==25918== \n==25918== Invalid free() / delete / delete[] / realloc()\n==25918==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==25918==    by 0x400B21: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==  Address 0x5208b80 is 22,640 bytes inside an unallocated block of size 4,193,488 in arena \"client\"\n==25918== \nDidn't find leaked memory when there was some.\ntotal_usage is incorrect.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==25918== \n==25918== HEAP SUMMARY:\n==25918==     in use at exit: 520 bytes in 3 blocks\n==25918==   total heap usage: 3 allocs, 6 frees, 520 bytes allocated\n==25918== \n==25918== 156 bytes in 1 blocks are definitely lost in loss record 1 of 3\n==25918==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==25918==    by 0x4007CD: mini_malloc (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==    by 0x400AFD: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918== \n==25918== 172 bytes in 1 blocks are definitely lost in loss record 2 of 3\n==25918==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==25918==    by 0x4007CD: mini_malloc (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==    by 0x400A5D: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918== \n==25918== 192 bytes in 1 blocks are definitely lost in loss record 3 of 3\n==25918==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==25918==    by 0x4007CD: mini_malloc (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918==    by 0x400A14: main (in .../ptwrdhn2/mini_valgrind/full_test)\n==25918== \n==25918== LEAK SUMMARY:\n==25918==    definitely lost: 520 bytes in 3 blocks\n==25918==    indirectly lost: 0 bytes in 0 blocks\n==25918==      possibly lost: 0 bytes in 0 blocks\n==25918==    still reachable: 0 bytes in 0 blocks\n==25918==         suppressed: 0 bytes in 0 blocks\n==25918== \n==25918== For counts of detected and suppressed errors, rerun with: -v\n==25918== ERROR SUMMARY: 20 errors from 18 contexts (suppressed: 0 from 0)\n"
      }
    ], 
    "checksum": "b75eeabd7a068141ecd8591a7ab675422ac27dd0  mini_valgrind.c", 
    "revision": "22355"
  }, 
  {
    "timestamp": "2016-09-17 00:00:00.660261", 
    "testcases": [
      {
        "description": "Test with program that has no memory leaks.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "no_leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has memory leaks.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has bad frees.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "bad_free", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "full", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==9889== Memcheck, a memory error detector\n==9889== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==9889== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==9889== Command: ././full_test\n==9889== \n==9889== \n==9889== HEAP SUMMARY:\n==9889==     in use at exit: 0 bytes in 0 blocks\n==9889==   total heap usage: 3 allocs, 3 frees, 520 bytes allocated\n==9889== \n==9889== All heap blocks were freed -- no leaks are possible\n==9889== \n==9889== For counts of detected and suppressed errors, rerun with: -v\n==9889== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "22842", 
    "checksum": "e73ae0e49a59f5f864fc1f2a71061af3c70f204e  mini_valgrind.c"
  }, 
  {
    "timestamp": "2016-09-18 00:00:00.646216", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "no_leak", 
        "description": "Test with program that has no memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "leak", 
        "description": "Test with program that has memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "bad_free", 
        "description": "Test with program that has bad frees."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "full", 
        "description": "Test with program that has a variety of issues."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==25948== Memcheck, a memory error detector\n==25948== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==25948== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==25948== Command: ././full_test\n==25948== \n==25948== \n==25948== HEAP SUMMARY:\n==25948==     in use at exit: 0 bytes in 0 blocks\n==25948==   total heap usage: 3 allocs, 3 frees, 520 bytes allocated\n==25948== \n==25948== All heap blocks were freed -- no leaks are possible\n==25948== \n==25948== For counts of detected and suppressed errors, rerun with: -v\n==25948== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "memory", 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well."
      }
    ], 
    "checksum": "e73ae0e49a59f5f864fc1f2a71061af3c70f204e  mini_valgrind.c", 
    "revision": "23710"
  }
]